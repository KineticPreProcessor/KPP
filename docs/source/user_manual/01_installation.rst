.. _install:

############
Installation
############

This section can be skipped if KPP is already installed on your system.

========================
Download KPP from Github
========================

Clone the KPP source code from the `KPP Github repository <(https://github.com/KineticPreProcessor/KPP>`_:

.. code-block:: console

   $ git clone https://github.com/KineticPreProcessor/KPP.git

This will create folder named KPP in your disk space. 

========================================
Define the KPP_HOME environment variable
========================================

Define the :envvar:`$KPP_HOME` environment variable to point to the
complete path where KPP is installed. Also, add the path of the KPP
executable to the :envvar:`$PATH` environment variable. If, for example,
KPP is installed in :envvar:`$HOME/kpp`, under the C shell you have to edit
the file :envvar:`$HOME/.cshrc` and add:

.. code-block:: console

   $ setenv KPP_HOME $HOME/kpp
   $ setenv PATH ${PATH}:$KPP_HOME/bin

If you use the bash shell, edit and add:

.. code-block:: bash

   $ export KPP_HOME=$HOME/kpp
   $ export PATH=$PATH:$KPP_HOME/bin

You can add the following statements to your :file:`.cshrc` or
:file:`.bashrc` environment file so that :envvar:`KPP_HOME` will be
defined at login.

=====================================================
Test if KPP dependencies are installed on your system
=====================================================

KPP depends on several other Unix packages.  Before using KPP for the
first time, test if these are installed on your system.  These should
come with most Linux or MacOS distributions.

If any of these packages are missing, you can use your systems package
manager to install them.

sed
---
The :program:`sed` utility is used to search for and replace text
in files.  To test if :program:`sed` has been installed, type:

.. code-block:: console

   $ which sed

bison
-----

The :program:`bison` utility parses the chemical mechanism file into a
computer-readable syntax.  To test :program:`bison` is installed, type:

.. code-block:: console

   $ which bison

flex
----

The :program:`flex` (the Fast Lexical Analyzer) creates a scanner that
can recognize the syntax generated by :program:`bison`.  To test if
:program:`flex` is installed, type:

.. code-block:: console

   $ which flex

Enter the path where the flex library (:file:`libfl.a` or
:file:`libfl.so` or ) is located into :file:`src/Makefile.defs`, e.g.

.. code-block:: make

   FLEX_LIB_DIR=/usr/lib

========================
Build the KPP executable
========================

Change to the KPP/src directory:

.. code-block:: console

   $ cd $KPP_HOME/src

To clean a previously-built KPP installation, delete the KPP object
files and all the examples with:    

.. code-block:: console

   $ make clean

To delete a previoulsy-built KPP executable as well, type:

.. code-block:: console

   $ make distclean

If necessary, edit and enter the name of your C compiler in
:file:`src/Makefile`.  The default setting is :program:`gcc` (aka the
GNU Compiler Collection).  

Create the kpp executable with:

.. code-block:: console

   $ make

This will create the executable file :file:`$KPP_HOME/bin/kpp`.
