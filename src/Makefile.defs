##############################################################################
#
#  KPP - The Kinetic PreProcessor
#        Builds simulation code for chemical kinetic systems
#
#  Copyright (C) 1995-1997 Valeriu Damian and Adrian Sandu
#  Copyright (C) 1997-2005 Adrian Sandu
#
#  KPP is free software; you can redistribute it and/or modify it under the
#  terms of the GNU General Public License as published by the Free Software
#  Foundation (http://www.gnu.org/copyleft/gpl.html); either version 2 of the
#  License, or (at your option) any later version.
#
#  KPP is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#  FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
#  details.
#
#  You should have received a copy of the GNU General Public License along
##  with this program; if not, consult http://www.gnu.org/copyleft/gpl.html or
#  write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
#  Boston, MA  02111-1307,  USA.
#
#  Adrian Sandu
#  Computer Science Department
#  Virginia Polytechnic Institute and State University
#  Blacksburg, VA 24060
#  E-mail: sandu@cs.vt.edu
#
##############################################################################

# In order to compile KPP you have to provide the following information:

# 1. CC
#    The name of the compiler you want to use. Normally this
#    is either GNU C compiler (gcc) or the native compiler (cc)
#    You can use the complete pathname if the compiler is not in $PATH
#    Note that for SUN machines is better to use gcc.
#    For GNU C compiler use:
#      CC=gcc
#    For the native compiler use:
#      CC=cc
#
# 2. CC_FLAGS
#    C compiler flags. Use "-g" to include debuging information.
#
# 3. FLEX
#    The name of your lexical analizer. KPP requires FLEX to be used.
#    FLEX is a public domain lexical analizer and you can download it from
#    http://www.gnu.org/software/flex/ or any other mirror site. If the flex
#    directory is not included in your path use the complete pathname.
#
# 4. FLEX_LIB_DIR
#    The complete pathname of the FLEX library (libfl.a).
#    On many systems this is either:
#    /usr/lib, /usr/lib64, /usr/local/util/lib/flex
#
# 5. BISON
#    The name of your parser generator. KPP requires BISON to be used.
#
# 6. INCLUDE_DIR
#    Path to include additional directories
#    Typically: /usr/include on Linux
#               /usr/include/sys on Mac OS X

############################################################
### Default settings                                     ###
############################################################

CC           := gcc
CC_FLAGS     := -g -Wall -Wno-unused-function
FLEX         := flex
FLEX_LIB_DIR := /usr/lib
BISON        := bison
INCLUDE_DIR  := /usr/include
SYSTEM       := $(shell uname)        # returns e.g. "Linux"
SYSTEM_M     := $(shell uname -m)     # returns e.g. "x86_64"
HOST         := $(shell hostname)     # returns name of machine

############################################################
### Keep looking for the flex library until found        ###
### Otherwise use the path specified in KPP_FLEX_LIB_DIR ###
###                                                      ###
### NOTE for MacOS X: IF you have installed flex with    ###
### HomeBrew, then flex will be installed to a path such ### 
### as /usr/local/Cellar/flex/X.Y.Z/lib, where X.Y.Z is  ###
### the version number.  --  Bob Yantosca (01 Nov 2021)  ###   
############################################################

# Try /usr/lib64
ifeq ($(wildcard $(FLEX_LIB_DIR)/libfl.*),)
  FLEX_LIB_DIR := /usr/lib64
endif

# Try /usr/local/lib
ifeq ($(wildcard $(FLEX_LIB_DIR)/libfl.*),)
  FLEX_LIB_DIR := /usr/local/lib
endif

# Try /usr/local/lib64
ifeq ($(wildcard $(FLEX_LIB_DIR)/libfl.*),)
  FLEX_LIB_DIR := /usr/local/lib64
endif

# If flex isn't found, look again e.g. /lib/x86_64
ifeq ($(wildcard $(FLEX_LIB_DIR)/libfl.*),)
  FLEX_LIB_DIR := /lib/$(SYSTEM_M)
endif

# If flex isn't found, look again e.g. /usr/lib/$(arch)-linux-gnu
ifeq ($(wildcard $(FLEX_LIB_DIR)/libfl.*),)
  FLEX_LIB_DIR := /usr/lib/$(firstword $(SYSTEM_M))-linux-gnu
endif

# If we can't find the flex library path, then specify it
# from the user's environment variable KPP_FLEX_LIB_DIR.
ifneq ($(KPP_FLEX_LIB_DIR),)
  FLEX_LIB_DIR = ${KPP_FLEX_LIB_DIR}
endif

# ERROR CHECK: EXIT if we can't find libfl.* (Flex library file)
ifeq ($(wildcard $(FLEX_LIB_DIR)/libfl.*),)
 $(error "Could not find the Flex library at $(FLEX_LIB_DIR)! Specify the path to flex in env var KPP_FLEX_LIB_DIR.")
endif

############################################################
### System-specific or host-specific default settings    ###
############################################################

# Settings for MacOS
ifeq ($(SYSTEM),Darwin)
  CC_FLAGS += -DMACOS -O
endif

#############################################################
